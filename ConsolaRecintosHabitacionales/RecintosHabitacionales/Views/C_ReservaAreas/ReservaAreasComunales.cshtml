@model DTOs.AreaComunal.BusquedaAreaComunal
@using Utilitarios;

<div class="post d-flex flex-column-fluid" id="kt_post">
    <div id="kt_content_container" class="container-xxl">

        <div class="card mb-xl-3 mb-3">

            <div class="card-header card-header-stretch encabezadoTablasNegroPlantilla ">
                <div class="card-title d-flex align-items-center">
                    <div class="row">
                        <div class="col-md-12">
                            <h3 class="fw-bolder m-0" style="color:white;">
                                <i class="fa-solid fa-bars-progress fs-2qx"></i>
                                Reservar de Áreas Comunales
                            </h3>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-12 ">
                <div class="card card-flush h-xl-100">
                    <div class="card-body pt-6">
                        <div class="row">
                            <div class="col-md-4 h-100 d-flex flex-column justify-content-between pe-lg-6 mb-lg-0 mb-10">
                                <b><label>Conjunto: </label></b>
                                @Html.DropDownList("IdConjunto", ViewData["ListaConjustosAcceso"] as SelectList, "Seleccionar", htmlAttributes: new { @aria_label = "Selecionar", @data_control = "select2", @data_placeholder = "Seleccionar", @class = "form-select form-select-solid form-select-lg",@onchange="buscarAreaComunalPorConjuntoselectConjunto('IdConjunto','IdAreaComunal')"} )
                            </div>
                            <div class="col-md-4 h-100 d-flex flex-column justify-content-between pe-lg-6 mb-lg-0 mb-10">
                                <b><label>Areas comunales disponibles: </label></b>
                                @Html.DropDownList("IdAreaComunal", ViewData["listaAreasComunales"] as SelectList, "Seleccionar", htmlAttributes: new { @aria_label = "Selecionar", @data_control = "select2", @data_placeholder = "Seleccionar", @class = "form-select form-select-solid form-select-lg"})
                            </div>
                        </div>


                    </div>
                </div>
            </div>


            <div>
                <div id="kt_docs_fullcalendar_populated"></div>
            </div>

        </div>
    </div>
</div>

@section scripts {
    <script src="~/js/gestionarareacomunal.js"></script>
    <script src="~/plugins/custom/datatables/datatables.bundle.js"></script>
   @* <script src="~/plugins/custom/formvalidation/uuid.js"></script>
    <script src="~/plugins/custom/utils/format.js"></script>*@
    
    
    <script>

        const element = document.getElementById("kt_docs_fullcalendar_basic");

        var todayDate = moment().startOf("day");
        var YM = todayDate.format("YYYY-MM");
        var YESTERDAY = todayDate.clone().subtract(1, "day").format("YYYY-MM-DD");
        var TODAY = todayDate.format("YYYY-MM-DD");
        var TOMORROW = todayDate.clone().add(1, "day").format("YYYY-MM-DD");

        var calendarEl = document.getElementById("kt_docs_fullcalendar_basic");
        var calendar = new FullCalendar.Calendar(calendarEl, {
            headerToolbar: {
                left: "prev,next today",
                center: "title",
                right: "dayGridMonth,timeGridWeek,timeGridDay,listMonth"
            },

            height: 800,
            contentHeight: 780,
            aspectRatio: 3,  // see: https://fullcalendar.io/docs/aspectRatio

            nowIndicator: true,
            now: TODAY + "T09:25:00", // just for demo

            views: {
                dayGridMonth: { buttonText: "month" },
                timeGridWeek: { buttonText: "week" },
                timeGridDay: { buttonText: "day" }
            },

            initialView: "dayGridMonth",
            initialDate: TODAY,

            editable: true,
            dayMaxEvents: true, // allow "more" link when too many events
            navLinks: true,
            //events: [
            //    ...
            //],

            //eventContent: function (info) {
            //    var element = $(info.el);

            //    //if (info.event.extendedProps && info.event.extendedProps.description) 
            //    //{
            //    //    if (element.hasClass("fc-day-grid-event")) {
            //    //        element.data("content", info.event.extendedProps.description);
            //    //        element.data("placement", "top");
            //    //        KTApp.initPopover(element);
            //    //    }
            //    //    else if (element.hasClass("fc-time-grid-event")) 
            //    //    {
            //    //        element.find(".fc-title").append('<div class="fc - description">" + info.event.extendedProps.description + "</div>');
            //    //    } 
            //    //    else if (element.find(".fc-list-item-title").lenght !== 0) 
            //    //    {
            //    //        let propiedad = '<div class="fc-description">' + info.event.extendedProps.description + '</div>'
            //    //        element.find(".fc-list-item-title").append(propiedad);

            //    //    }
            //    //}
            //}
        });

        calendar.render();
      
    </script>

    }